from GraphModel.Graph import Graph
from GraphModel.Node import Node


class GraphContent:

    def __init__(self, graph: Graph):
        self.create_demo_nodes(graph)

    def create_demo_nodes(self, graph):
        """
        Diese Methode dient Ihnen also Demonstration für den Aufbau eines Graphen.
        TODO: Löschen oder kommentieren Sie diese Methode aus wenn Sie Ihren eigenen Graphen erstellen.
        """
        problem_definition_regular = Node("**Wenn Sie EPI regulär im ersten Fachsemester belegen:**\n\n"
                                          "Ihr Ziel ist es einen Wissensgraphen zu erstellen. Das Thema ist dabei "
                                          "***Informatik*** bzw. ***Das Studium der Informatik***.\n\n Das Thema ist "
                                          "somit sehr offen. Dies gibt Ihnen die Möglichkeit, das Projekt zu nutzen, "
                                          "um sich mit Themengebieten auseinanderzusetzen, die Sie persönlich "
                                          "interessieren, für die Sie jedoch bisher nicht die zeitlichen "
                                          "Möglichkeiten hatten. \n Es ist dabei explizit Teil des Projektes zu "
                                          "entscheiden, wie Sie vorgehen möchten. Dies betrifft sowohl die "
                                          "Integration und Verwaltung von Inhalten, das Anlegen und Verbinden der "
                                          "Knoten, aber auch Ihre Organisation im Team. Wie verteilen Sie Aufgaben? "
                                          "Wie tauschen Sie sich zu den Inhalten aus? Welches Vorgehen nutzen Sie? "
                                          "Arbeiten Sie als Team an einem Thema? Oder arbeitet Sie an "
                                          "unterschiedlichen Themen? Welche Verbindungen gibt es dann zwischen diesen "
                                          "Themen? \n Nutzen Sie dabei die Denkwerkzeuge, Vorgehensweisen und "
                                          "Software, die Sie in der Veranstaltung kennengelernt haben. \n \n ## "
                                          "Anforderungen: \n Als erstes geben Sie Ihrem Team einen Namen. Dies hilft "
                                          "uns, Ihren Graphen zuzuordnen und verhindert spätere Überschneidungen, "
                                          "wenn wir die Graphen der Teams zusammenführen. "
                                          "\n\n Sie erstellen pro Teammitglied mindestens 20 Wissensknoten. "
                                          "Quellen Angaben sind notwendig und werden ebenso als Knoten erstellt. "
                                          "Knoten, die Quellen repräsentieren, zählen jedoch nicht zu diesen "
                                          "20 Wissensknoten. \nAls Umfang sehen wir ca. 1500 Zeichen pro Knoten vor. "
                                          "Dies entspricht in etwa einer halben A4 Seite Fließtext. \n"
                                          "Sie können auch mehr als 20 Knoten anlegen und dafür den "
                                          "Inhalt der einzelnen Knoten reduzieren. Dies gibt Ihnen die Möglichkeit, "
                                          "feingranularer zu arbeiten und so Erläuterungen zu einzelnen Begriffen "
                                          "einzubringen. \n\n**Bspw.:** Könnte Ihr Thema eine Programmiersprache "
                                          "sein. Dann erstellen Sie einen Knoten zu der Programmiersprache. Darin "
                                          "stellen Sie fest, dass diese Sprache interpretiert wird. Darüber können "
                                          "Sie einen Knoten erstellen, der erläutert, was Interpretation in einer "
                                          "Programmiersprache bedeutet. Darüber könnten Sie wiederum die Alternative "
                                          "des Kompilierens erläutern. Ein neuer Knoten entsteht. Alternativ könnten "
                                          "Sie auch über Vorgehensweisen in der Softwareentwicklung schreiben, "
                                          "künstliche Intelligenz jedes Thema, das Sie interessiert und einen Bezug "
                                          "zur Informatik bzw. dem Studium der Informatik hat. \nGenerell werden wir "
                                          "den Wissensgraphen auf den Inhalt prüfen. Daher sind diese Anforderungen "
                                          "Hilfestellungen für Sie, damit Sie ein Gefühl dafür bekommen, "
                                          "welcher Umfang angestrebt werden sollte. \nWenn Sie das Programm starten, "
                                          "wird Ihnen dazu zusätzlich in der Konsole die Anzahl der Knoten als auch "
                                          "der Zeichen ausgegeben. \nIhnen steht es natürlich auch frei, "
                                          "diese Anforderungen zu überschreiten. \n\n ## Abgabe: \nDie Abgabe erfolgt "
                                          "wie gewohnt via Ilias. Das Programm bietet Ihnen die Option, Ihren Graphen "
                                          "gemeinsam mit allen verwendeten Bildern als ZIP-File zu exportieren. "
                                          "Diesen ZIP-File laden Sie nach bis zur Deadline im Ilias hoch. \n "
                                          , "Aufgabenstellung: EPI Regulär")

        problem_definition_pow = Node("Wenn Sie EPI in einem höheren Fachsemester belegen"
                                      , "Aufgabenstellung: EPI POW ")

        how_to_node = Node("Dies ist der Inhalt des Knotens. Ein Zeilenumbruch erfolgt automatisch. Wenn Sie "
                           "jedoch manuell einen Absatz einfügen möchten ist dies über \n \n möglich.\n \n"
                           " Sie haben die Möglichkeit Text als *kursiv* oder **fett** oder ***kombiniert*** "
                           "hervorzuheben.\n\n"
                           "Mit der ***Leertaste*** können Sie Ihren Graphen ausrichten lassen. Hierbei "
                           "wirken zwei Arten von  simulierten Kräften. Knoten stoßen sich generell ab "
                           "zum Zweck der visuellen Verteilung. Desto weiter Knoten voneinander entfernt "
                           "sind desto schwächer ist Abstoßungskraft. Knoten die miteinander verbunden sind "
                           "ziehen sich an. Desto weiter Knoten voneinander entfernt sind umso stärker ist "
                           "die Anziehungskraft.\n\n"
                           "Mit der ***Esc*** Taste können Sie die Anwendung schließen.\n\n"
                           "Darüber hinaus können Sie Überschriften in drei Ebenen definieren. Text der als "
                           "Überschrift markiert wird, wird bis zum nächsten Zeilenumbruch als solcher "
                           "erkannt.\n"
                           "\n# Das ist Ebene 1\n"
                           "Nach einem Absatz wird eine Überschrift automatisch unterbrochen."
                           "\n## Das ist Ebene 2\n"
                           "Wie sie sehen ist diese Überschrift etwas kleiner."
                           "\n### Und abschließend Ebene 3\n"
                           "Und hier die kleinste Form.\n\n"
                           "\n# Hinweis\n"
                           "Wenn Ihr Graph wächst wird es immer schwieriger werden ihn zu "
                           "erweitern und zu verändern. Hier entsteht die Verbindung zu Softwareprojekten. "
                           "Zu beginn ist alles noch leicht nachvollziehbar und übersichtlich. Desto mehr "
                           "Funktionalität Sie jedoch implementieren um so komplexer wird Ihr System. "
                           "Es gibt immer mehr Inhalte und mehr Verbindungen dieser Inhalte. Erschaffen Sie "
                           "hierbei keine geeignete Struktur erhalten Sie was wir Spaghetti-Code oder einen "
                           "Big Ball of Mud nennen. Alles ist scheinbar miteinander verbunden und erzeugt "
                           "Abhängigkeiten miteinander. Wenn Sie ein Teil verändern wollen müssen Sie auch "
                           "alle anderen Teile verändern."
                           "Ein Teil Ihrer Aufgabenstellung ist es mit dieser wachsenden Komplexität "
                           "umzugehen. Sie entscheiden dabei als Team welchen Weg Sie einschlagen. Ziehen "
                           "sie es vor die Inhalte hard zu coden also direkt in diese Methode zu schreiben? "
                           "Werden Sie eigene Klassen und Methoden für die Bestandteile des Graphen anlegen? "
                           "Schreiben Sie selbst einen Importer über den Sie Text Files einlesen können?"
                           "Schreiben Sie ein User Interface um Texte direkt über die"
                           "Applikation einzugeben? Denken Sie dabei auch an Modelle und wie Abstraktion "
                           "Ihnen hilft Dinge zu vereinfachen. Planen Sie Ihren Graphen, teilen Sie "
                           "Verantwortlichkeiten im Team auf, erstellen Sie Modelle und iterieren Sie um"
                           "Ihren Wissensgraph inkrementell zu entwickeln."
                           ""
                           "\n# Bilder\n"
                           "Zu jedem Knoten können Sie ein Bild hinzufügen. Hier für ist es notwendig "
                           "das dieses Bild im Ordner Resources\Images abgelegt wird und der Name der Datei "
                           "als dritter Parameter spezifiziert wird. Denken Sie daran Bilder in Git "
                           "hinzuzufügen: Rechtsklick + Git + Add. Auch diese Bilder müssen Sie anschließend "
                           "commiten und pushen."
                           "\n # Verbindungen (Kanten) \n"
                           "Knoten können über die Methode .connect mit einander verbunden werden. Dabei "
                           "wird diese Methode auf dem Vater Knoten angewandt und das Kind als Parameter "
                           "übergeben, \n\nz. B.: ***vater.connect(kind)***\n\n"
                           "Wenn Sie im Graphen einen Knoten Verschieben, werden die Kinder immer "
                           "mit verschoben. Sie können auch bidirektionale Verbindungen anlegen in dem Sie "
                           "zusätzlich: *kind.connect(vater)* verwenden. Selektieren Sie einen Knoten, "
                           "werden alle Kinder und Kindeskinder im Graphen optisch hervorgehoben."
                           "\n # Menü \n"
                           "Das Menü oben links stellt Ihnen zwei Optionen zur Verfügung."
                           "\n ## Export \n"
                           "Der Export erlaubt es Ihnen den aktuellen Graph als ZIP File zu exportieren. "
                           "Dieser File ist Ihre Abgabe am Ende des Projektes. Neben dem Graphen werden auch "
                           "alle Bilder im Image Ordner exportiert."
                           "\n ## Import \n"
                           "Der Import erlaubt es einen exportierten Graphen zu laden. Für Ihr Projekt ist "
                           "dies sekundär und dient uns zum Prüfen Ihres Graphen. Wenn Sie diese "
                           "Funktion dennoch verwenden möchten, achten Sie bitte darauf, dass Bilder im "
                           "importierten ZIP File in den Image Ordner Ihres Projektes importiert werden. "
                           "Falls ein File mit dem identischen Namen im Image Ordner bereits vorhanden ist, "
                           "wird der Name des importierten Bildes mit dem Namen Ihres Teams konkateniert/"
                           "verbunden.\n\n",
                           "Dies ist der Titel Ihres Knotens",
                           "image_placeholder.png")

        # TODO: 20 Knoten pro Teammitglied + Quellenknoten, pro Knoten einen Umfang von ca. einer Seite Fließtext, das ist viel und bei 5 Teammitgliedern kommen Sie so auf 100 Seiten Text
        # TODO: Aufgabenstellungsknoten
        online_source_example_node = Node("## Anmerkung: \n"
                                          "Dies ist Knoten für Online-Quellen. In diesem konkreten Fall für Markdown "
                                          "als Internet Quelle. Hierbei wird die offizielle Website des Entwicklers "
                                          "von Markdown verwendet. Eine Website als Quelle ist legitim, wenn sie "
                                          "bestimmte Kriterien der Glaubwürdigkeit und Zuverlässigkeit erfüllt. "
                                          "Kriterien hierfür sind: \n\n"
                                          "**- Expertise:**\n"
                                          "Überprüfen Sie, wer hinter der Website steht. Ist es eine anerkannte "
                                          "Institution, eine Bildungseinrichtung oder ein Experte auf dem Gebiet? \n\n"
                                          "**- Aktualität:**\n"
                                          "Überprüfen Sie das Datum der Veröffentlichung oder der letzten "
                                          "Aktualisierung. Für viele Themen ist es wichtig, dass die Informationen "
                                          "aktuell sind. \n\n"
                                          "**- Genauigkeit und Zuverlässigkeit:**\n"
                                          "Enthält die Website präzise Informationen, die mit anderen glaubwürdigen "
                                          "Quellen übereinstimmen? Websites, die sorgfältig recherchiert und mit "
                                          "Belegen untermauert sind, sind in der Regel vertrauenswürdiger.\n\n"
                                          "**- Zweck und Objektivität:**\n"
                                          "Beurteilen Sie den Zweck der Website. Ist sie darauf ausgerichtet, "
                                          "objektive Informationen zu liefern, oder verfolgt sie kommerzielle, "
                                          "politische oder ideologische Ziele? Objektive, unparteiische Quellen sind "
                                          "generell vertrauenswürdiger.\n\n"
                                          "**- Transparenz:**\n"
                                          "Gute Quellen bieten oft Informationen über ihre Autoren, Finanzierung, "
                                          "Mission und den Prozess der Inhaltsprüfung.\n\n"
                                          "\n## Beispiel\n"
                                          "\n### Autor:\n"
                                          "Gruber, John"
                                          "\n### Jahr:\n"
                                          "2004"
                                          "\n### Titel:\n"
                                          "Markdown"
                                          "\n### Verfügbar unter:\n"
                                          "https://daringfireball.net/projects/markdown/"
                                          "\n### Zugriff am:\n"
                                          "11. November 2023"
                                          , "Markdown")

        literature_source_example_node = Node("## Anmerkung: \n"
                                              "Dies ist Knoten für Literaturquellen. Hierbei sind folgende "
                                              "Informationen für ***Bücher*** essenziell:\n\n"
                                              "**- Autor:**\n Der vollständige Name des Autors.\n\n"
                                              "**- Erscheinungsjahr:**\n Das Jahr, in dem das Buch veröffentlicht "
                                              "wurde.\n\n"
                                              "**- Titel des Buches:**\n Der vollständige Titel des Buches, eventuell "
                                              "inklusive Untertitel.\n\n"
                                              "**- Auflage:**\n Inhalt kann sich mit den verschieden Auflagen "
                                              "eines Buches unterscheiden. Daher ist es wichtig die Auflage anzugeben, "
                                              "auf die Sie sich beziehen. \n\n"
                                              "**- Ort der Veröffentlichung:**\n Die Stadt, in der der Verlag seinen "
                                              "Sitz hat."
                                              "**- Verlag:**\n Der Name des Verlags.\n\n"
                                              "\n## Beispiel\n"
                                              "\n### Autor:\n"
                                              "Martin, R.C."
                                              "\n### Veröffentlichungsjahr:\n"
                                              "2021"
                                              "\n### Titel:\n"
                                              "Clean Craftsmanship: Disciplines, Standards, and Ethics"
                                              "\n### Auflage:\n"
                                              "1. Auflage"
                                              "\n### Ort:\n"
                                              "Boston"
                                              "\n### Verlag:\n"
                                              "Addison-Wesley Professional"
                                              , "Clean Craftsmanship: Disciplines, Standards, and Ethics")

        paper_source_example_node = Node("Für wissenschaftliche Veröffentlichungen (***Paper***) sind folgende "
                                         "Angaben notwendig:\n\n"
                                         "**- Autor(en) des Papers:**\n Die Namen der Autoren, in der "
                                         "Reihenfolge, in der sie im Paper aufgeführt sind.\n\n"
                                         "**- Jahr der Veröffentlichung:**\n Das Jahr, in dem das Paper "
                                         "veröffentlicht wurde.\n\n"
                                         "**- Titel des Papers:**\n Der vollständige Titel des Papers.\n\n"
                                         "**- Titel der Zeitschrift oder Konferenz:**\n Der Name der Zeitschrift "
                                         "oder der Konferenz, in der das Paper veröffentlicht wurde.\n\n"
                                         "**- Bandnummer(Ausgabennummer):**\n Die Band- und Ausgabennummer der "
                                         "Zeitschrift, in der das Paper erschien.\n\n"
                                         "**- Seitenzahlen:**\n Die Seitenzahlen des Papers in der Zeitschrift."
                                         "**- URL:**\n Falls das Paper online verfügbar ist, fügen Sie die URL "
                                         "hinzu.\n\n"
                                         "**- Zugriff am:**\n Das Datum, an dem Sie auf das Paper zugegriffen "
                                         "haben, falls es online verfügbar ist.\n\n"
                                         "\n## Beispiel\n"
                                         "\n### Autor:\n"
                                         "Dijkstra, E.W."
                                         "\n### Veröffentlichungsjahr:\n"
                                         "1972"
                                         "\n### Titel:\n"
                                         "The Humble Programmer"
                                         "\n### In:\n"
                                         "Communications of the ACM"
                                         "\n### Bandnummer(Ausgabennummer):\n"
                                         "15(10)"
                                         "\n### Seitenzahlen:\n"
                                         "859-866"
                                         , "The Humble Programmer")

        test_node = Node("Das ist mein eigener Test"
                                         , "My Test")


        problem_definition_regular.connect(how_to_node)
        problem_definition_pow.connect(how_to_node)
        how_to_node.connect(online_source_example_node)
        how_to_node.connect(literature_source_example_node)
        how_to_node.connect(paper_source_example_node)
        test_node.connect(how_to_node)

        graph.add_new_node_to_graph(problem_definition_regular)
        graph.add_new_node_to_graph(problem_definition_pow)
        graph.add_new_node_to_graph(how_to_node)
        graph.add_new_node_to_graph(online_source_example_node)
        graph.add_new_node_to_graph(literature_source_example_node)
        graph.add_new_node_to_graph(paper_source_example_node)
        graph.add_new_node_to_graph(test_node)
